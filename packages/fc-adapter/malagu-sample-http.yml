backend: 
  entry: lib/node/sample-http-application-entry
malagu:
  server:
    _domain: "${ 'HTTPS' in malagu['faas-adapter'].customDomain.protocol ? 'https' : 'http' }://${malagu['faas-adapter'].customDomain.name}"
    endpoint: "${(malagu['faas-adapter'].customDomain.name|eval || !malagu['faas-adapter'].account.id) ? malagu['faas-adapter'].customDomain.name ? malagu.server._domain : undefined : ('https://' + malagu['faas-adapter'].account.id + '.' + malagu['faas-adapter'].region + '.fc.aliyuncs.com')}"
  faas-adapter:
    function:
      runtime: nodejs12
    trigger:
      name: ${malagu['faas-adapter'].function.name}-${malagu['faas-adapter'].alias.name}-http
      qualifier: ${malagu['faas-adapter'].alias.name}
      functionName: ${malagu['faas-adapter'].function.name}
      serviceName: ${malagu['faas-adapter'].service.name}
      triggerType: http
      triggerConfig:
        authType: anonymous
        methods: [GET, POST, PUT, DELETE, HEAD, PATCH]
    customDomain:
      name: ${env.MALAGU_DOMAIN}
      protocol: HTTP
      certConfig:
        # certName: xxx
        privateKey: "${ env.SSL_KEY ?: 'ssl/domain.key'}"
        certificate: "${ env.SSL_PEM ?: 'ssl/domain.pem'}"
      routeConfig:
        routes:
          - path: '/*'
            serviceName: ${malagu['faas-adapter'].service.name}
            qualifier: ${malagu['faas-adapter'].alias.name}
            functionName: ${malagu['faas-adapter'].function.name}